kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: radar-numeriqc-api
  annotations:
    description: Radar Numeriqc API
    tags: cqen,radar,numerique,numeriqc,api
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: radar-numeriqc-api-build
  stringData:
    WebHookSecretKey: "${GITHUB_WEBHOOK_SECRET}"
#PostgreSQL
- kind: Secret
  apiVersion: v1
  metadata:
    name: rna-postgresql
    annotations:
      template.openshift.io/expose-username: "{.data['database-user']}"
      template.openshift.io/expose-password: "{.data['database-password']}"
      template.openshift.io/expose-database_name: "{.data['database-name']}"
  stringData:
    database-user: "${POSTGRESQL_USER}"
    database-password: "${POSTGRESQL_PASSWORD}"
    database-name: "${POSTGRESQL_DATABASE}"
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: rna-postgresql
- kind: BuildConfig 
  apiVersion: v1
  metadata:
    annotations:
      app.openshift.io/vcs-ref: main
      app.openshift.io/vcs-uri: https://github.com/CQEN-QDCE/Radar-NumeriQc-API.git
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: radar-numeriqc-api
    name: rna-postgresql
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: rna-postgresql:latest
    source:
      contextDir: /postgresql
      git:
        ref: main
        uri: https://github.com/CQEN-QDCE/Radar-NumeriQc-API.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    triggers:
    - github:
        secretReference:
          name: radar-numeriqc-api-build
      type: GitHub
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    name: rna-postgresql
  spec:
    ports:
    - name: rna-postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 0
    selector:
      name: rna-postgresql
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: rna-postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: rna-postgresql
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app.kubernetes.io/part-of: radar-numeriqc-api
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - rna-postgresql
        from:
          kind: ImageStreamTag
          name: rna-postgresql:latest
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    selector:
      name: rna-postgresql
    template:
      metadata:
        labels:
          name: rna-postgresql
      spec:
        containers:
        - name: rna-postgresql
          image: " "
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/usr/libexec/check-container"
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 120
            exec:
              command:
              - "/usr/libexec/check-container"
              - "--live"
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: rna-postgresql
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rna-postgresql
                key: database-password
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: rna-postgresql
                key: database-name
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - name: rna-postgresql-data
            mountPath: "/var/lib/pgsql/data"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: IfNotPresent
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: rna-postgresql-data
          persistentVolumeClaim:
            claimName: rna-postgresql
        restartPolicy: Always
        dnsPolicy: ClusterFirst
  status: {}
#Radar Numeriqc API (NodeJS)
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: radar-numeriqc-api
- kind: BuildConfig 
  apiVersion: v1
  metadata:
    annotations:
      app.openshift.io/vcs-ref: main
      app.openshift.io/vcs-uri: https://github.com/CQEN-QDCE/Radar-NumeriQc-API.git
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: radar-numeriqc-api
    name: radar-numeriqc-api
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: radar-numeriqc-api:latest
    source:
      contextDir: /
      git:
        ref: main
        uri: https://github.com/CQEN-QDCE/Radar-NumeriQc-API.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    triggers:
    - github:
        secretReference:
          name: radar-numeriqc-api-build
      type: GitHub
    - type: ConfigChange
- kind: Route 
  apiVersion: v1
  metadata:
    annotations:
      description: Route for Radar Numeriqc Api http service
    labels:
      app: radar-numeriqc-api
    name: acces
  spec:
    port:
      targetPort: radar-numeriqc-api-http
    to:
      kind: Service
      name: radar-numeriqc-api
- kind: Service 
  apiVersion: v1
  metadata:
    labels:
      app: radar-numeriqc-api
      app.kubernetes.io/component: radar-numeriqc-api
      app.kubernetes.io/instance: radar-numeriqc-api
      app.kubernetes.io/part-of: radar-numeriqc-api
    name: radar-numeriqc-api
  spec:
    ports:
    - name: radar-numeriqc-api-http
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: radar-numeriqc-api
      deploymentconfig: radar-numeriqc-api
    sessionAffinity: None
    type: ClusterIP
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: radar-numeriqc-api
    annotations:
      app.openshift.io/connects-to: rna-postgresql
    labels:
      app: radar-numeriqc-api
      app.kubernetes.io/component: radar-numeriqc-api
      app.kubernetes.io/instance: radar-numeriqc-api
      app.kubernetes.io/part-of: radar-numeriqc-api
  spec:
    strategy:
      type: Recreate
      recreateParams:
        post:
          failurePolicy: Abort
          execNewPod:
            containerName: radar-numeriqc-api 
            command: [ "npm", "run", "migrate" ]
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - radar-numeriqc-api
        from:
          kind: ImageStreamTag
          name: radar-numeriqc-api:latest
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    selector:
      name: radar-numeriqc-api
    template:
      metadata:
        labels:
          name: radar-numeriqc-api
          app: radar-numeriqc-api
          deploymentconfig: radar-numeriqc-api
      spec:
        containers:
        - name: radar-numeriqc-api
          image: " "
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            httpGet:
              path: "/status"
              port: 3000
              scheme: "HTTP"
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: "/status"
              port: 3000
              scheme: "HTTP"
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          env:
          - name: NODE_ENV
            value: development
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: SERVER_PORT
            value: "3000"
          - name: POSTGRESQL_HOST
            value: rna-postgresql
          - name: POSTGRESQL_PORT
            value: "5432"
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: rna-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: rna-postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: rna-postgresql
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
        restartPolicy: Always
        dnsPolicy: ClusterFirst
  status: {}
parameters:
- name: POSTGRESQL_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.
  generate: expression
  from: user[A-Z0-9]{3}
  required: true
- name: POSTGRESQL_PASSWORD
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: POSTGRESQL_DATABASE
  displayName: PostgreSQL Database Name
  description: Name of the PostgreSQL database accessed.
  value: radar-numeriqc-api
  required: true
- name: GITHUB_WEBHOOK_SECRET
  description: A secret string used to configure the GitHub webhook for the radar-api-qc app build
  generate: expression 
  from: "[a-zA-Z0-9]{40}"
  required: true
